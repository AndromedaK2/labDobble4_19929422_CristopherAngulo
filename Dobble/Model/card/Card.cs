
///////////////////////////////////////////////////////////
//  Card.cs
//  Implementation of the Class Cardct
//  Created on:      27-jun.-2022 13:32:39
//  Original author: Cristopher Angulo
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks; 

namespace Model.card
{
    public class Card : ICard
    {
		/// <summary>
		/// @description list of any object (string, integer)
		/// </summary>
		public List<object> Elements { get; set; } 
        /// <summary>
        /// @description id is generated by a random function
        /// @see Helper
        /// </summary>
        public int Id { get; set; }

		/// <summary>
		/// @implNote main constructor
		/// </summary>
		public Card()
		{

		}

        public Card(List<object> elements, int id)
        {
			Id = Helper.generateRandomNumber(1, 1000);
			Elements = elements;
		}

		/// <summary>
		/// @implNote add an element in the list of element
		/// </summary>
		/// <param name="element">element</param>
		public void AddElement(object element)
		{
			if (!Elements.Contains(element))
			{
				Elements.Add(element);
			}

		}


		public override bool Equals(object obj)
		{
			return obj is Card card &&
				   EqualityComparer<List<object>>.Default.Equals(Elements, card.Elements) &&
				   Id == card.Id;
		}

		public override int GetHashCode() { return 0; }

		/// <summary>
		/// @implNote  this method is overriding to return a card string
		/// @return card in a string format
		/// </summary>
		public override string ToString()
        {

			string caption = "id: " + Id + " Carta: [";
			for (int j = 0; j < Elements.Count; j++)
			{
				object element = Elements[j];
				if (j + 1 == Elements.Count)
				{
					caption = caption + element + "]";
				}
				else
				{
					caption = caption + element + "-";
				}
			}
			return caption + "\n";

		}


	}
}
